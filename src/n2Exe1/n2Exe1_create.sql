-- MySQL Script generated by MySQL Workbench
-- Thu Oct 12 23:53:49 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema youtube
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema youtube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `youtube` DEFAULT CHARACTER SET utf8 ;
USE `youtube` ;

-- -----------------------------------------------------
-- Table `youtube`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`user` (
  `id` INT NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `username` VARCHAR(16) NOT NULL,
  `signup_date_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `birth_date` DATE NOT NULL,
  `genre` VARCHAR(45) NULL,
  `country` VARCHAR(45) NOT NULL,
  `postal_code` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `youtube`.`content_status_details`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`content_status_details` (
  `id` INT NOT NULL,
  `status_name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `youtube`.`videos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`videos` (
  `id` INT NOT NULL,
  `title` VARCHAR(255) NOT NULL,
  `published_by` INT NOT NULL,
  `description` VARCHAR(500) NOT NULL,
  `upload_date_time` DATETIME NOT NULL,
  `size` INT NOT NULL,
  `duration` INT NOT NULL,
  `thumbnail` VARCHAR(300) NOT NULL,
  `plays_count` DOUBLE NOT NULL,
  `likes_count` DOUBLE NOT NULL,
  `dislikes_count` DOUBLE NOT NULL,
  `video_status_id` INT NOT NULL,
  `video_file_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `published_by`
    FOREIGN KEY (`published_by`)
    REFERENCES `youtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `video_status_id`
    FOREIGN KEY (`video_status_id`)
    REFERENCES `youtube`.`content_status_details` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `published_by_idx` ON `youtube`.`videos` (`published_by` ASC) VISIBLE;

CREATE INDEX `video_status_id_idx` ON `youtube`.`videos` (`video_status_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtube`.`content_tag_details`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`content_tag_details` (
  `id` INT NOT NULL,
  `tag_name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `youtube`.`channel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`channel` (
  `id` INT NOT NULL,
  `channel_name` VARCHAR(255) NOT NULL,
  `channel_description` VARCHAR(500) NOT NULL,
  `channel_creation_date_time` DATETIME NOT NULL,
  `created_by` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `created_by`
    FOREIGN KEY (`created_by`)
    REFERENCES `youtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `created_by_idx` ON `youtube`.`channel` (`created_by` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtube`.`user_playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`user_playlist` (
  `id` INT NOT NULL,
  `user_playlist_name` VARCHAR(255) NOT NULL,
  `user_playlist_creation-date_time` DATETIME NOT NULL,
  `user_playlist_status_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `youtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_playlist_status_id`
    FOREIGN KEY (`user_playlist_status_id`)
    REFERENCES `youtube`.`content_status_details` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `created_by_idx` ON `youtube`.`user_playlist` (`user_id` ASC) VISIBLE;

CREATE INDEX `user_playlist_status_id_idx` ON `youtube`.`user_playlist` (`user_playlist_status_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtube`.`feedback_detail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`feedback_detail` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `youtube`.`content_tag_details_has_videos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`content_tag_details_has_videos` (
  `content_tag_details_id` INT NOT NULL,
  `video_id` INT NOT NULL,
  PRIMARY KEY (`content_tag_details_id`, `video_id`),
  CONSTRAINT `fk_content_tags_details_has_videos_content_tags_details1`
    FOREIGN KEY (`content_tag_details_id`)
    REFERENCES `youtube`.`content_tag_details` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_content_tags_details_has_videos_videos1`
    FOREIGN KEY (`video_id`)
    REFERENCES `youtube`.`videos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_content_tags_details_has_videos_videos1_idx` ON `youtube`.`content_tag_details_has_videos` (`video_id` ASC) VISIBLE;

CREATE INDEX `fk_content_tags_details_has_videos_content_tags_details1_idx` ON `youtube`.`content_tag_details_has_videos` (`content_tag_details_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtube`.`channel_has_subscribed_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`channel_has_subscribed_user` (
  `channel_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`channel_id`, `user_id`),
  CONSTRAINT `fk_channel_has_user_channel1`
    FOREIGN KEY (`channel_id`)
    REFERENCES `youtube`.`channel` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_channel_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `youtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_channel_has_user_user1_idx` ON `youtube`.`channel_has_subscribed_user` (`user_id` ASC) VISIBLE;

CREATE INDEX `fk_channel_has_user_channel1_idx` ON `youtube`.`channel_has_subscribed_user` (`channel_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtube`.`user_has_feedback_videos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`user_has_feedback_videos` (
  `user_id` INT NOT NULL,
  `videos_id` INT NOT NULL,
  `feedback_video_id` INT NOT NULL,
  `feedback_date_time` DATETIME NOT NULL,
  PRIMARY KEY (`user_id`, `videos_id`),
  CONSTRAINT `fk_user_has_videos_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `youtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_videos_videos1`
    FOREIGN KEY (`videos_id`)
    REFERENCES `youtube`.`videos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `feedback_video_id`
    FOREIGN KEY (`feedback_video_id`)
    REFERENCES `youtube`.`feedback_detail` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_user_has_videos_videos1_idx` ON `youtube`.`user_has_feedback_videos` (`videos_id` ASC) VISIBLE;

CREATE INDEX `fk_user_has_videos_user1_idx` ON `youtube`.`user_has_feedback_videos` (`user_id` ASC) VISIBLE;

CREATE INDEX `feedback_id_idx` ON `youtube`.`user_has_feedback_videos` (`feedback_video_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtube`.`user_has_comment_videos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`user_has_comment_videos` (
  `user_id` INT NOT NULL,
  `videos_id` INT NOT NULL,
  `comment_creation_date_time` DATETIME NOT NULL,
  `user_vide_comment` VARCHAR(500) NOT NULL,
  PRIMARY KEY (`user_id`, `videos_id`),
  CONSTRAINT `fk_user_has_videos_user2`
    FOREIGN KEY (`user_id`)
    REFERENCES `youtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_videos_videos2`
    FOREIGN KEY (`videos_id`)
    REFERENCES `youtube`.`videos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_user_has_videos_videos2_idx` ON `youtube`.`user_has_comment_videos` (`videos_id` ASC) VISIBLE;

CREATE INDEX `fk_user_has_videos_user2_idx` ON `youtube`.`user_has_comment_videos` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtube`.`user_has_feedback_user_comment_videos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`user_has_feedback_user_comment_videos` (
  `user_id` INT NOT NULL,
  `user_has_comment_videos_user_id` INT NOT NULL,
  `feedback_comment_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `user_has_comment_videos_user_id`),
  CONSTRAINT `fk_user_has_user_has_comment_videos_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `youtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `feedback_comment_id`
    FOREIGN KEY (`feedback_comment_id`)
    REFERENCES `youtube`.`feedback_detail` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_user_has_user_has_comment_videos_user1_idx` ON `youtube`.`user_has_feedback_user_comment_videos` (`user_id` ASC) VISIBLE;

CREATE INDEX `feedback_id_idx` ON `youtube`.`user_has_feedback_user_comment_videos` (`feedback_comment_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtube`.`user_playlist_has_videos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`user_playlist_has_videos` (
  `user_playlist_id` INT NOT NULL,
  `videos_id` INT NOT NULL,
  PRIMARY KEY (`user_playlist_id`, `videos_id`),
  CONSTRAINT `fk_user_playlist_has_videos_user_playlist1`
    FOREIGN KEY (`user_playlist_id`)
    REFERENCES `youtube`.`user_playlist` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_playlist_has_videos_videos1`
    FOREIGN KEY (`videos_id`)
    REFERENCES `youtube`.`videos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_user_playlist_has_videos_videos1_idx` ON `youtube`.`user_playlist_has_videos` (`videos_id` ASC) VISIBLE;

CREATE INDEX `fk_user_playlist_has_videos_user_playlist1_idx` ON `youtube`.`user_playlist_has_videos` (`user_playlist_id` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
